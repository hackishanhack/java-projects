APPROACH 1
#include <bits/stdc++.h>
using namespace std;

int main() {
    int arr[] = {1, 1, 0, 2, 0, 1, 2};
    int n = sizeof(arr)/sizeof(arr[0]);
    
    sort(arr, arr+n);
    
    for (int i=0; i<n; i++)
        cout << arr[i] << " ";

    return 0;
}

APPROACH 2
#include <bits/stdc++.h>
using namespace std;

void sorting012Array(int arr[], int n) {
    int count0 = 0, count1 = 0, count2 = 0;
    for(int i=0; i<n; i++) {
        if (arr[i] == 0)
            count0++;
        else if (arr[i] == 1)
            count1++;
        else if (arr[i] == 2)
            count2++;
    }
    int i = 0;
    while(count0--)
        arr[i++] = 0;
    while(count1--)
        arr[i++] = 1;
    while(count2--)
        arr[i++] = 2;
}

int main() {
    int arr[] = {1, 1, 0, 2, 0, 1, 2};
    int n = sizeof(arr)/sizeof(arr[0]);  
    sorting012Array(arr, n);
    for (int i=0; i<n; i++)
        cout << arr[i] << " ";
    return 0;
}

APPROACH 3
#include <iostream>
using namespace std;

void swap(int *x, int *y) 
{
  int temp = *x;
  *x = *y;
  *y = temp;
}

void sorting012Array(int a[], int n) {
  int i = 0, j = 0, k = n - 1;
  while (j <= k) {
    if (a[j] == 0) {
      swap( &a[j], &a[i]);
      i++;
      j++;
    } else if (a[j] == 1)
      j++;
    else if (a[j] == 2) {
      swap( &a[j], &a[k]);
      k--;
    }
  }
}
C
#include <stdio.h>
void swap(int *x, int *y) 
{
  int temp = *x;
  *x = *y;
  *y = temp;
}
void sorting012Array(int a[], int n) {
  int i = 0, j = 0, k = n - 1;
  while (j <= k) {
    if (a[j] == 0) {
      swap( &a[j], &a[i]);
      i++;
      j++;
    } else if (a[j] == 1)
      j++;
    else if (a[j] == 2) {
      swap( &a[j], &a[k]);
      k--;
    }
  }
}

int main() {
  int arr[] = {1, 1, 0, 2, 0, 1, 2};
  int n = sizeof(arr) / sizeof(arr[0]);
  sorting012Array(arr, n);
  for (int i = 0; i < n; i++)
    printf("%d ", arr[i]);
  return 0;
}
PYTHON
def sorting012Array(a):
  lo = 0
  hi = len(a) - 1
  mid = 0
  while mid <= hi:
    if a[mid] == 0:
      a[lo], a[mid] = a[mid], a[lo]
      lo = lo + 1
      mid = mid + 1
    elif a[mid] == 1:
      mid = mid + 1
    else:
      a[mid], a[hi] = a[hi], a[mid]
      hi = hi - 1
if __name__ == "__main__":
  a = [1, 1, 0, 2, 0, 1, 2]
  sorting012Array(a)
  print(' '.join(str(x) for x in a))
  
JAVA
import java.util.Scanner;

class Result
{
  static void sorting012Array(int a[], int n)
  {
    int i=0, j=0, k=n-1;
    while (j <= k)
    {
      if (a[j] == 0)
      {
        int temp = a[i];
        a[i] = a[j];
        a[j] = temp;
        i++;
        j++;
      }
      else if (a[j] == 1)
      {
        j++;
      }
      else if (a[j] == 2)
      {
        int temp = a[k];
        a[k] = a[j];
        a[j] = temp;
        k--;
      }
    }
  }
}

class Main
{
  public static void main(String[] args)
  {
    int a[] = {1, 1, 0, 2, 0, 1, 2};
    int n = a.length;
    Result.sorting012Array(a,n);
    for(int i=0;i<n;i++)
      System.out.print(a[i] + " ");
  }
}
