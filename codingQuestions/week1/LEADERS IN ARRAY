#include <bits/stdc++.h>
using namespace std;

int findRightMax(int arr[], int l, int r)
{
    int max = arr[l];
    for (int i = l + 1; i <= r; i++)
        if (arr[i] > max)
            max = arr[i];
    return max;
}

void findTheLeaders(int arr[], int n)
{
    for (int i = 0; i < n-1; i++)
    {
        int right_max = findRightMax(arr, i + 1, n-1);
        if (arr[i] > right_max)
            cout << arr[i] << " ";
    }
    cout << arr[n-1];
}

int main()
{
    int arr[] = {12, 27, 14, 11, 25, 6, 7};
    int n = sizeof(arr) / sizeof(arr[0]);
    
    findTheLeaders(arr, n);
    return 0;
}

APPROACH 2
#include <stdio.h>

void findTheLeaders(int arr[], int n)
{
    printf("%d ", arr[n-1]);
    int right_max = arr[n-1];
    
    for (int i = n-2; i >= 0; i--)
    {
        if (arr[i] > right_max)
        {
            printf("%d ", arr[i]);
            right_max = arr[i];
        }
    }
}

int main()
{
    int arr[] = {12, 27, 14, 11, 25, 6, 7};
    int n = sizeof(arr) / sizeof(arr[0]);
    
    findTheLeaders(arr, n);
    return 0;
}

PYTHON
def findTheLeaders(arr,n):
    print(arr[n-1],end=' ')
    right_max = arr[n-1];
    i = n-2;
    while(i >= 0):
        if (arr[i] > right_max):
            print(arr[i],end=' ')
            right_max = arr[i]
        i-=1

if __name__ == '__main__':
    arr = [12, 27, 14, 11, 25, 6, 7]
    size = len(arr)
    findTheLeaders(arr,size)
   
JAVA
public class Main
{
    static void findTheLeaders(int arr[], int n)
    {
        System.out.print(arr[n-1] + " ");
        int right_max = arr[n-1];
        
        for (int i = n-2; i >= 0; i--)
        {
            if (arr[i] > right_max)
            {
                System.out.print(arr[i] + " ");
                right_max = arr[i];
            }
        }
    } 
    
    public static void main(String args[])
    {
        int arr[] = {12, 27, 14, 11, 25, 6, 7};
        int n = arr.length;
        
        findTheLeaders(arr, n);
    }
}
